{"version":3,"sources":["reportWebVitals.js","app/services/localStorage.service.js","app/services/auth.service.js","app/services/http.service.js","app/services/user.service.js","app/utils/history.js","app/utils/generateAuthError.js","app/store/users.js","app/components/ui/navProfile.jsx","app/components/ui/navbar.jsx","app/utils/mockData.js","app/layouts/main.jsx","app/components/common/form/textField.jsx","app/utils/validator.js","app/components/common/form/checkBoxField.jsx","app/components/ui/loginForm.jsx","app/components/common/form/selectField.jsx","app/components/common/form/radioField.jsx","app/components/common/form/multiSelectField.jsx","app/services/quality.service.js","app/utils/isOutdated.js","app/store/qualities.js","app/services/profession.service.js","app/store/professions.js","app/components/ui/registerForm.jsx","app/layouts/login.jsx","app/components/ui/userCard.jsx","app/components/ui/qualities/quality.jsx","app/components/ui/qualities/index.js","app/components/ui/qualities/qualitiesList.jsx","app/components/ui/qualitiesCard.jsx","app/components/ui/meetingsCard.jsx","app/utils/displayDate.js","app/components/common/comments/comment.jsx","app/components/common/comments/commentList.jsx","app/components/common/form/textAreaField.jsx","app/components/common/comments/addCommentForm.jsx","app/services/comment.service.js","app/store/comments.js","app/components/ui/comments.jsx","app/components/page/userPage/index.js","app/components/page/userPage/userPage.jsx","app/components/common/pagination.jsx","app/components/common/groupList.jsx","app/components/ui/searchStatus.jsx","app/components/common/table/tableHeader.jsx","app/components/common/table/tableBody.jsx","app/components/common/table/index.js","app/components/common/table/table.jsx","app/components/common/bookmark.jsx","app/components/ui/profession.jsx","app/components/ui/usersTable.jsx","app/components/page/usersListPage/index.js","app/components/page/usersListPage/usersListPage.jsx","app/utils/paginate.js","app/components/common/backHistoryButton.jsx","app/components/page/userEditPage/userEditPage.jsx","app/components/page/userEditPage/index.js","app/components/ui/hoc/usersLoader.jsx","app/layouts/users.jsx","app/components/common/protectedRoute.jsx","app/layouts/logout.jsx","app/components/ui/hoc/appLoader.jsx","app/App.js","app/store/createStore.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","TOKEN_KEY","REFRESH_KEY","EXPIRES_KEY","USERID_KEY","localStorageService","setTokens","refreshToken","accessToken","userId","_ref$expiresIn","expiresIn","expiresDate","Date","getTime","localStorage","setItem","getAccessToken","getItem","getRefreshToken","getTokenExpiresDate","getUserId","removeAuthData","removeItem","httpAuth","axios","create","baseURL","config","apiEndPoint","params","key","process","REACT_APP_FIREBASE_KEY","authService","register","_register","Object","asyncToGenerator","regenerator_default","a","mark","_callee","payload","_yield$httpAuth$post","data","wrap","_context","prev","next","post","sent","abrupt","stop","_x","apply","this","arguments","login","_login","_callee2","email","password","_yield$httpAuth$post2","_context2","returnSecureToken","_x2","refresh","_refresh","_callee3","_yield$httpAuth$post3","_context3","grant_type","refresh_token","http","configFile","interceptors","request","use","isExpired","containSlash","_data","_accessToken","now","isFireBase","test","url","slice","idToken","id_token","expires_in","localId","user_id","objectSpread","auth","headers","Authorization","concat","error","Promise","reject","response","res","content","_id","keys","map","status","console","log","toast","httpService","get","put","delete","patch","userService","_get","_yield$httpService$ge","_create","_yield$httpService$pu","getCurrentUser","_getCurrentUser","_yield$httpService$ge2","update","_update","_callee4","_yield$httpService$pa","_context4","history","createBrowserHistory","generateAuthError","message","initialState","entities","isLoading","isLoggedIn","dataLoaded","usersSlice","createSlice","name","reducers","usersRequested","state","usersReceived","action","usersRequestFailed","authRequestSuccess","authRequestFailed","userCreated","Array","isArray","push","userLoggedOut","userUpdateSuccessed","findIndex","u","authRequested","usersReducer","reducer","actions","createAction","userUpdateFailed","userUpdateRequested","loadUsersList","_ref4","dispatch","_yield$userService$ge","t0","_x3","getUserById","users","find","NavProfile","currentUser","useSelector","_useState","useState","_useState2","slicedToArray","isOpen","setOpen","react_default","createElement","className","onClick","prevState","src","image","alt","height","react_router_dom","to","NavBar","navProfile","useMockData","statusConsts","idle","pending","successed","setError","_useState3","_useState4","setStatus","_useState5","_useState6","progress","setProgress","_useState7","_useState8","count","setCount","summaryCount","professions","length","qualities","incrementCount","_initialize","_iterator","_step","prof","_iterator2","_step2","quality","_iterator3","_step3","user","_createForOfIteratorHelper","s","n","done","value","f","finish","t1","t2","t3","useEffect","newProgress","Math","floor","updateProgress","initialize","Main","_useMockData","TextField","label","type","onChange","placeholder","showPassword","setShowPassword","htmlFor","id","_ref2","target","defaultProps","validator","errors","validate","validateMethod","statusValidate","JSON","stringify","trim","fieldName","CheckBoxField","children","checked","LoginForm","stayOn","setData","loginError","useHistory","useDispatch","setErrors","handleChange","defineProperty","validatorConfig","isRequired","isValid","onSubmit","preventDefault","redirect","location","from","pathname","_error$response$data$","code","errorMessage","textField","checkBoxField","disabled","SelectField","defaultOption","options","optionsArray","optionName","option","RadioField","MultiSelectField","defaultValue","react_select_esm","isMulti","closeMenuOnSelect","classNamePrefix","qualityService","fetchAll","_fetchAll","isOutdated","date","qualitiesSlice","lastFetch","qualitiesRequested","qualitiesReceived","qualitiesRequestFailed","qualitiesReducer","loadQualitiesList","getState","_yield$qualityService","professionService","professionsSlice","professionsRequested","professionsReceived","professionsRequestFailed","professionsReducer","RegisterForm","profession","sex","licence","qualitiesList","q","professionList","p","isEmail","min","isCapitalSymbol","isContainDigit","newData","_ref3","selectField","radioField","multiSelectField","Login","useParams","formType","setFormType","toggleFormType","Fragment","registerForm","role","loginForm","UserCard","currentUserId","width","rate","Quality","color","Qualities","qualitiesIds","qualitiesArray","qualities_createForOfIteratorHelper","qualId","err","qualities_quality","assign","QualitiesCard","ui_qualities","MeetingsCard","displayDate","dateNow","getFullYear","getDay","getHours","minutesDif","getMinutes","toLocaleString","month","getMonth","getDate","Comment","createdAt","created_at","onRemove","CommentList","comments","comment","comments_comment","TextAreaField","rows","AddCommentForm","onAdd","handleSubmit","textAreaField","commentService","createComment","_createComment","_yield$httpService$po","getComments","_getComments","pageId","orderBy","equalTo","removeComment","_removeComment","commentId","_yield$httpService$de","commentsSlice","commentsRequested","commentsReceived","commentsRequestFailed","commentRemoved","filter","c","commentCreated","commentsReducer","addCommentRequested","removeCommentRequested","Comments","_yield$commentService","loadCommentsList","sortedComments","addCommentForm","_yield$commentService2","commentList","_x4","UserPage","userCard","qualitiesCard","meetingsCard","completedMeetings","ui_comments","Pagination","itemsCount","pageSize","onPageChange","currentPage","pageCount","ceil","pages","_","range","aria-label","page","GroupList","items","valueProperty","contentProperty","onItemSelect","selectedItem","item","SearchStatus","props","number","classes","getBadgeClasses","suffix1","suffix2","phrase","renderPhrase","TableHeader","onSort","selectedSort","columns","column","path","order","undefined","scope","renderArrow","TableBody","component","renderContent","Table","tableHeader","tableBody","Bookmark","rest","objectWithoutProperties","Profession","getProfessionById","UsersTable","onToggleBookMark","bookmark","common_table","UsersListPage","professionsLoading","setCurrentPage","selectedProf","setSelectedProf","iter","sortBy","setSortBy","searchQuery","setSearchQuery","clearFilter","filteredUsers","toLowerCase","indexOf","usersCrop","pageNumber","startIndex","toConsumableArray","splice","paginate","groupList","searchStatus","usersTable","onDelete","pagination","pageIndex","BackHistoryButton","goBack","UserEditPage","setIsLoading","qualitiesLoading","transformData","userEditPage_createForOfIteratorHelper","getQualitiesListByIds","qual","backHistoryButton","_ref5","_yield$userService$up","UsersLoader","dataStatus","propTypes","PropTypes","oneOfType","arrayOf","node","Users","edit","usersLoader","page_userEditPage","react_router","page_userPage","page_usersListPage","ProtectedRoute","Component","render","LogOut","AppLoader","usersStatusLoading","_yield$professionServ","App","appLoader","navbar","exact","protectedRoute","react_toastify_esm","rootReducer","combineReducers","store","configureStore","ReactDOM","StrictMode","es","app_App","document","getElementById"],"mappings":"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","file":"static/js/main.8785eaeb.chunk.js","sourcesContent":["const reportWebVitals = (onPerfEntry) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import(\"web-vitals\").then(\n            ({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n                getCLS(onPerfEntry);\n                getFID(onPerfEntry);\n                getFCP(onPerfEntry);\n                getLCP(onPerfEntry);\n                getTTFB(onPerfEntry);\n            }\n        );\n    }\n};\n\nexport default reportWebVitals;\n","const TOKEN_KEY = \"jwt-token\";\r\nconst REFRESH_KEY = \"jwt-refresh-token\";\r\nconst EXPIRES_KEY = \"jwt-expires\";\r\nconst USERID_KEY = \"user-local-id\";\r\n\r\nexport function setTokens({\r\n    refreshToken,\r\n    accessToken,\r\n    userId,\r\n    expiresIn = 3600\r\n}) {\r\n    const expiresDate = new Date().getTime() + expiresIn * 1000;\r\n    localStorage.setItem(USERID_KEY, userId);\r\n    localStorage.setItem(TOKEN_KEY, accessToken);\r\n    localStorage.setItem(REFRESH_KEY, refreshToken);\r\n    localStorage.setItem(EXPIRES_KEY, expiresDate);\r\n}\r\n\r\nexport function getAccessToken() {\r\n    return localStorage.getItem(TOKEN_KEY);\r\n}\r\n\r\nexport function getRefreshToken() {\r\n    return localStorage.getItem(REFRESH_KEY);\r\n}\r\n\r\nexport function removeAuthData() {\r\n    localStorage.removeItem(USERID_KEY);\r\n    localStorage.removeItem(TOKEN_KEY);\r\n    localStorage.removeItem(REFRESH_KEY);\r\n    localStorage.removeItem(EXPIRES_KEY);\r\n}\r\nexport function getTokenExpiresDate() {\r\n    return localStorage.getItem(EXPIRES_KEY);\r\n}\r\nexport function getUserId() {\r\n    return localStorage.getItem(USERID_KEY)\r\n}\r\nconst localStorageService = {\r\n    setTokens,\r\n    getAccessToken,\r\n    getRefreshToken,\r\n    getTokenExpiresDate,\r\n    getUserId,\r\n    removeAuthData\r\n};\r\nexport default localStorageService;","import axios from \"axios\";\r\nimport localStorageService from \"./localStorage.service\";\r\nimport config from \"../config.json\";\r\n\r\nconst httpAuth = axios.create({\r\n    // baseURL: \"https://identitytoolkit.googleapis.com/v1/\",\r\n    baseURL: config.apiEndPoint + \"/auth/\",\r\n    params: {\r\n        key: process.env.REACT_APP_FIREBASE_KEY\r\n    }\r\n});\r\n\r\nconst authService = {\r\n    register: async (payload) => {\r\n        const { data } = await httpAuth.post(`signUp`, payload);\r\n        return data;\r\n    },\r\n    login: async ({\r\n        email,\r\n        password\r\n    }) => {\r\n        const { data } = await httpAuth.post(`signInWithPassword`, {\r\n            email,\r\n            password,\r\n            returnSecureToken: true\r\n        });\r\n        return data;\r\n    },\r\n    refresh: async () => {\r\n        const { data } = await httpAuth.post(\"token\", {\r\n            grant_type: \"refresh_token\",\r\n            refresh_token: localStorageService.getRefreshToken()\r\n        });\r\n        return data;\r\n    }\r\n};\r\nexport default authService;","import axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport configFile from \"../config.json\";\r\nimport localStorageService from \"./localStorage.service\";\r\nimport authService from \"./auth.service\";\r\n\r\nconst http = axios.create({\r\n    baseURL: configFile.apiEndPoint\r\n\r\n});\r\n\r\nhttp.interceptors.request.use(async function (config) {\r\n    const expiresDate = localStorageService.getTokenExpiresDate();\r\n    const refreshToken = localStorageService.getRefreshToken();\r\n    const isExpired = refreshToken && expiresDate < Date.now();\r\n    if (configFile.isFireBase) {\r\n        const containSlash = /\\/$/gi.test(config.url);\r\n        config.url = (containSlash ? config.url.slice(0, -1) : config.url) + \".json\";\r\n\r\n        if (isExpired) {\r\n            const data = await authService.refresh();\r\n\r\n            localStorageService.setTokens({\r\n                refreshToken: data.refresh_token,\r\n                idToken: data.id_token,\r\n                expiresIn: data.expires_in,\r\n                localId: data.user_id\r\n            });\r\n        }\r\n        const accessToken = localStorageService.getAccessToken();\r\n        if (accessToken) {\r\n            config.params = {\r\n                ...config.params,\r\n                auth: accessToken\r\n            };\r\n        }\r\n    } else {\r\n        if (isExpired) {\r\n            const data = await authService.refresh();\r\n            localStorageService.setTokens(data);\r\n        }\r\n        const accessToken = localStorageService.getAccessToken();\r\n        if (accessToken) {\r\n            config.headers = {\r\n                ...config.headers,\r\n                Authorization: `Bearer ${accessToken}`\r\n            };\r\n        }\r\n    }\r\n    return config;\r\n},\r\n    function (error) {\r\n    // Do something with request error\r\n    return Promise.reject(error);\r\n});\r\n\r\nfunction transformData(data) {\r\n    return data && !data._id ? Object.keys(data).map(key => ({\r\n        ...data[key]\r\n    })) : data;\r\n}\r\n\r\nhttp.interceptors.response.use(\r\n    (res) => {\r\n        if (configFile.isFireBase) {\r\n            res.data = {\r\n                content: transformData(res.data)\r\n            };\r\n        }\r\n        res.data = { content: res.data };\r\n        return res;\r\n    },\r\n    function (error) {\r\n        const expectedErrors = error.response &&\r\n            error.response.status >= 400 &&\r\n            error.response.status < 500;\r\n        if (!expectedErrors) {\r\n            console.log(error);\r\n            toast.error(\"Something was wrong. Try it later\");\r\n        }\r\n        return Promise.reject(error);\r\n    });\r\nconst httpService = {\r\n    get: http.get,\r\n    post: http.post,\r\n    put: http.put,\r\n    delete: http.delete,\r\n    patch: http.patch\r\n};\r\nexport default httpService;","import httpService from \"./http.service\";\r\nimport localStorageService from \"./localStorage.service\";\r\n\r\nconst userEndpoint = \"user/\";\r\n\r\nconst userService = {\r\n    get: async () => {\r\n        const { data } = await httpService.get(userEndpoint);\r\n        return data;\r\n    },\r\n    create: async (payload) => {\r\n        const { data } = await httpService.put(userEndpoint + payload._id, payload);\r\n        return data;\r\n    },\r\n    getCurrentUser: async () => {\r\n        const { data } = await httpService.get(\r\n            userEndpoint + localStorageService.getUserId()\r\n        );\r\n        return data;\r\n    },\r\n    update: async (payload) => {\r\n        const { data } = await httpService.patch(\r\n            userEndpoint + localStorageService.getUserId(), payload);\r\n        return data;\r\n    }\r\n};\r\nexport default userService;\r\n","import { createBrowserHistory } from \"history\";\r\n\r\nconst history = createBrowserHistory();\r\n\r\nexport default history","export function generateAuthError(message) {\r\nswitch (message){\r\ncase \"EMAIL_EXISTS\":\r\n   return \"The user with this email exists\"\r\ncase \"INVALID_PASSWORD\":\r\n   return \"The password is invalid or the user does not have a password\"\r\ndefault:\r\n    return \"Too much trying, try later please\"\r\n}\r\n}","import { createAction, createSlice } from \"@reduxjs/toolkit\";\r\nimport userService from \"../services/user.service\";\r\nimport authService from \"../services/auth.service\";\r\nimport localStorageService from \"../services/localStorage.service\";\r\nimport history from \"../utils/history\";\r\nimport { generateAuthError } from \"../utils/generateAuthError\";\r\n\r\nconst initialState = localStorageService.getAccessToken() ? {\r\n        entities: null,\r\n        isLoading: true,\r\n        error: null,\r\n        auth: { userId: localStorageService.getUserId() },\r\n        isLoggedIn: true,\r\n        dataLoaded: false,\r\n    }\r\n    : {\r\n        entities: null,\r\n        isLoading: false,\r\n        error: null,\r\n        auth: null,\r\n        isLoggedIn: false,\r\n        dataLoaded: false,\r\n    };\r\nconst usersSlice = createSlice({\r\n    name: \"users\",\r\n    initialState,\r\n    reducers: {\r\n        usersRequested: (state) => {\r\n            state.isLoading = true;\r\n        },\r\n        usersReceived: (state, action) => {\r\n            state.entities = action.payload;\r\n            state.dataLoaded = true;\r\n            state.isLoading = false;\r\n        },\r\n        usersRequestFailed: (state, action) => {\r\n            state.error = action.payload;\r\n            state.isLoading = false;\r\n        },\r\n        authRequestSuccess: (state, action) => {\r\n            state.auth = action.payload;\r\n            state.isLoggedIn = true;\r\n\r\n        },\r\n        authRequestFailed: (state, action) => {\r\n            state.error = action.payload;\r\n            state.isLoading = false;\r\n        },\r\n        userCreated: (state, action) => {\r\n            if (!Array.isArray(state.entities)) {\r\n                state.entities = [];\r\n            }\r\n            state.entities.push(action.payload);\r\n        },\r\n        userLoggedOut: (state) => {\r\n            state.entities = null;\r\n            state.isLoggedIn = false;\r\n            state.auth = null;\r\n            state.dataLoaded = false;\r\n        },\r\n        userUpdateSuccessed: (state, action) => {\r\n            state.entities[state.entities.findIndex(\r\n                (u) => u._id === action.payload._id\r\n            )] = action.payload;\r\n        },\r\n        authRequested: (state) => {\r\n            state.error = null;\r\n        }\r\n    }\r\n});\r\n\r\nconst {\r\n    reducer: usersReducer,\r\n    actions\r\n} = usersSlice;\r\nconst {\r\n    usersRequested,\r\n    usersReceived,\r\n    usersRequestFailed,\r\n    authRequestSuccess,\r\n    authRequestFailed,\r\n    userLoggedOut,\r\n    userUpdateSuccessed\r\n} = actions;\r\n\r\nconst authRequested = createAction(\"users/authRequested\");\r\nconst userUpdateFailed = createAction(\"users/userUpdateFailed\");\r\nconst userUpdateRequested = createAction(\"users/userUpdateRequested\");\r\n\r\nexport const login = ({\r\n    payload,\r\n    redirect\r\n}) => async (dispatch) => {\r\n    const {\r\n        email,\r\n        password\r\n    } = payload;\r\n    dispatch(authRequested());\r\n    try {\r\n        const data = await authService.login({\r\n            email,\r\n            password\r\n        });\r\n        localStorageService.setTokens(data);\r\n        dispatch(authRequestSuccess({ userId: data.userId }));\r\n        history.push(redirect);\r\n    } catch (error) {\r\n        const {\r\n            code,\r\n            message\r\n        } = error.response.data.error;\r\n        if (code === 400) {\r\n            const errorMessage = generateAuthError(message);\r\n            dispatch(authRequestFailed(errorMessage));\r\n        } else {\r\n            dispatch(authRequestFailed(error.message));\r\n\r\n        }\r\n    }\r\n};\r\nexport const signUp = (payload) =>\r\n    async (dispatch) => {\r\n        dispatch(authRequested);\r\n\r\n        try {\r\n            const data = await authService.register(payload);\r\n            localStorageService.setTokens(data);\r\n            dispatch(authRequestSuccess({ userId: data.userId }));\r\n            history.push(\"/users\");\r\n        } catch (error) {\r\n            dispatch(authRequestFailed(error.message));\r\n        }\r\n    };\r\n\r\nexport const logOut = () => (dispatch) => {\r\n    localStorageService.removeAuthData();\r\n    dispatch(userLoggedOut());\r\n    history.push(\"/\");\r\n\r\n};\r\n\r\nexport const loadUsersList = () => async (dispatch) => {\r\n    dispatch(usersRequested());\r\n    try {\r\n        const { content } = await userService.get();\r\n        dispatch(usersReceived(content));\r\n    } catch (error) {\r\n        dispatch(usersRequestFailed(error.message));\r\n    }\r\n};\r\n\r\nexport const updateUser = (payload) => async (dispatch) => {\r\n    dispatch(userUpdateRequested());\r\n    try {\r\n        const { content } = await userService.update(payload);\r\n        dispatch(userUpdateSuccessed(content));\r\n        history.push(`/users/${content._id}`);\r\n    } catch (error) {\r\n        dispatch(userUpdateFailed(error.message));\r\n    }\r\n};\r\nexport const getUsersList = () => state => state.users.entities;\r\nexport const getCurrentUserData = () => state => {\r\n    return state.users.entities ?\r\n        state.users.entities.find(\r\n            (u) => u._id === state.users.auth.userId)\r\n        : null;\r\n};\r\n\r\nexport const getUserById = (userId) => state => {\r\n    if (state.users.entities) {\r\n        return state.users.entities.find((u) => u._id === userId);\r\n    }\r\n};\r\n\r\nexport const getIsLoggedIn = () => state => state.users.isLoggedIn;\r\nexport const getDataStatus = () => state => state.users.dataLoaded;\r\nexport const getUsersLoadingStatus = () => state => state.users.isLoading;\r\nexport const getCurrentUserId = () => state => state.users.auth.userId;\r\nexport const getAuthErrors = () => state => state.users.error;\r\nexport default usersReducer;","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { getCurrentUserData } from \"../../store/users\";\r\n\r\nconst NavProfile = () => {\r\n    const currentUser = useSelector(getCurrentUserData());\r\n\r\n    const [isOpen, setOpen] = useState(false);\r\n    const toggleMenu = () => {\r\n        setOpen(prevState => !prevState);\r\n    };\r\n\r\n    if(!currentUser)return \"Loading...\"\r\n    return (\r\n        <div className=\"dropdown\" onClick={toggleMenu}>\r\n            <div className=\"btn dropdown-toggle d-flex align-items-center\">\r\n                <div className=\"me-2\">{currentUser.name}</div>\r\n                <img src={currentUser.image}\r\n                     alt=\"\"\r\n                     className=\"img-responsive rounded-circle\"\r\n                     height=\"40\"/>\r\n            </div>\r\n            <div className={\"w-100 dropdown-menu\" + (isOpen ? \" show\" : \"\")}>\r\n                <Link to={`/users/${currentUser._id}`} className=\"dropdown-item\">Profile</Link>\r\n                <Link to='/logout' className=\"dropdown-item\">Logout</Link>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default NavProfile;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport NavProfile from \"./navProfile\";\nimport { useSelector } from \"react-redux\";\nimport { getIsLoggedIn } from \"../../store/users\";\n\nconst NavBar = () => {\n    const isLoggedIn = useSelector(getIsLoggedIn());\n    return (\n        <nav className=\"navbar bg-light mb-3\">\n            <div className=\"container-fluid\">\n                <ul className=\"nav\">\n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to=\"/\">\n                            Main\n                        </Link>\n                    </li>\n                    {isLoggedIn && (\n                        <li className=\"nav-item\">\n                            <Link className=\"nav-link\" to=\"/users\">\n                                Users\n                            </Link>\n                        </li>\n                    )}\n\n                </ul>\n                <div className=\"d-flex\">\n                    {isLoggedIn ? (<NavProfile/>) : (\n                        <Link className=\"nav-link\" to=\"/login\">\n                            Login\n                        </Link>\n                    )}\n                </div>\n            </div>\n        </nav>\n    );\n};\n\nexport default NavBar;\n","import professions from \"../mockData/professions.json\";\r\nimport qualities from \"../mockData/qualities.json\";\r\nimport users from \"../mockData/users.json\";\r\nimport { useEffect, useState } from \"react\";\r\nimport httpService from \"../services/http.service\";\r\n\r\nconst useMockData = () => {\r\n    const statusConsts = {\r\n        idle: \"Not started\",\r\n        pending: \"In process\",\r\n        successed: \"Ready\",\r\n        error: \"Error\"\r\n    };\r\n    const [error, setError] = useState(null);\r\n    const [status, setStatus] = useState(statusConsts.idle);\r\n    const [progress, setProgress] = useState(0);\r\n    const [count, setCount] = useState(0);\r\n    const summaryCount = professions.length + qualities.length + users.length;\r\n\r\n    const incrementCount = () => {\r\n        setCount((prevState) => prevState + 1);\r\n    };\r\n\r\n    const updateProgress = () => {\r\n        if (count !== 0 && status === statusConsts.idle) {\r\n            setStatus(statusConsts.pending);\r\n        }\r\n\r\n        const newProgress = Math.floor((count / summaryCount) * 100);\r\n\r\n        if (progress < newProgress) {\r\n            setProgress(() => newProgress);\r\n        }\r\n        if (newProgress === 100) {\r\n            setStatus(statusConsts.successed);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        updateProgress();\r\n    }, [count]);\r\n\r\n    async function initialize() {\r\n        try {\r\n            for (const prof of professions) {\r\n                await httpService.put(\"profession/\" + prof._id, prof);\r\n                incrementCount();\r\n            }\r\n            for (const quality of qualities) {\r\n                await httpService.put(\"quality/\" + quality._id, quality);\r\n                incrementCount();\r\n            }\r\n            for (const user of users) {\r\n                await httpService.put(\"user/\" + user._id, user);\r\n                incrementCount();\r\n            }\r\n        } catch (error) {\r\n            setError(error);\r\n            setStatus(statusConsts.error);\r\n        }\r\n    }\r\n\r\n    return {\r\n        error,\r\n        initialize,\r\n        progress,\r\n        status\r\n    };\r\n};\r\nexport default useMockData;","import React from \"react\";\r\nimport useMockData from \"../utils/mockData\";\r\n\r\nconst Main = () => {\r\n        const {\r\n            error,\r\n            initialize,\r\n            progress,\r\n            status\r\n\r\n        } = useMockData();\r\n\r\n        const handleClick = () => {\r\n            initialize();\r\n        };\r\n\r\n        return <div className=\"container mt-5\"><h1>Main</h1>\r\n            <h3>Data initialization in FireBase</h3>\r\n            <ul>\r\n                <li>Status:{status}</li>\r\n                <li>Progress:{progress}</li>\r\n                {error && <li>Error:{error}</li>}\r\n            </ul>\r\n            <button className=\"btn btn-primary\" onClick={handleClick}>\r\n                {\" \"}\r\n                Initialize\r\n            </button>\r\n        </div>;\r\n    }\r\n;\r\nexport default Main;\r\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst TextField = ({\n    label,\n    type,\n    name,\n    value,\n    onChange,\n    error,\n    placeholder\n}) => {\n    const [showPassword, setShowPassword] = useState(false);\n\n    const handleChange = ({ target }) => {\n        onChange({\n            name: target.name,\n            value: target.value\n        });\n    };\n\n    const getInputClasses = () => {\n        return \"form-control\" + error ? \" is-invalid\" : \"\";\n    };\n\n    const toggleShowPassword = () => {\n        setShowPassword((prevState) => !prevState);\n    };\n    return (\n        <div className=\"mb-4 \">\n            <label htmlFor={name}>{label}</label>\n            <div className=\"input-group has-validation\">\n                <input\n                    type={showPassword ? \"text\" : type}\n                    id={name}\n                    value={value}\n                    name={name}\n                    onChange={handleChange}\n                    className={getInputClasses()}\n                    placeholder={placeholder}\n                />\n                {type === \"password\" && (\n                    <button\n                        className=\"btn btn-outline-secondary\"\n                        type=\"button\"\n                        onClick={toggleShowPassword}\n                    >\n                        <i\n                            className={\n                                \"bi bi-eye\" + (showPassword ? \"-slash\" : \"\")\n                            }\n                        />\n                    </button>\n                )}\n                {error && <div className=\"invalid-feedback\">{error}</div>}\n            </div>\n        </div>\n    );\n};\n\nTextField.defaultProps = {\n    type: \"text\"\n};\n\nTextField.propTypes = {\n    label: PropTypes.string,\n    type: PropTypes.string,\n    name: PropTypes.string,\n    value: PropTypes.string,\n    error: PropTypes.string,\n    onChange: PropTypes.func\n};\n\nexport default TextField;\n","export function validator(data, config) {\n    const errors = {};\n\n    function validate(validateMethod, data, config) {\n        let statusValidate;\n        switch (validateMethod) {\n        case \"isRequired\": {\n            if (typeof data === \"boolean\") {\n                statusValidate = !data;\n            } else if (typeof data === \"object\") {\n                statusValidate = JSON.stringify(data) === null;\n            } else {\n                statusValidate = data.trim() === \"\";\n            }\n            break;\n        }\n        case \"isEmail\": {\n            const emailRegExp = /^\\S+@\\S+\\.\\S+$/g;\n            // const emailRegExp = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n            statusValidate = !emailRegExp.test(data);\n            break;\n        }\n        case \"isCapitalSymbol\": {\n            const capitalRegExp = /[A-Z]+/g;\n            statusValidate = !capitalRegExp.test(data);\n            break;\n        }\n        case \"isContainDigit\": {\n            const digitRegExp = /\\d+/g;\n            statusValidate = !digitRegExp.test(data);\n            break;\n        }\n        case \"min\": {\n            statusValidate = data.length < config.value;\n            break;\n        }\n        case \"isNotADigit\": {\n            const nameRegExp = /^\\D+$/g;\n            // const emailRegExp = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n            statusValidate = !nameRegExp.test(data);\n            break;\n        }\n        default:\n            break;\n        }\n        if (statusValidate) return config.message;\n    }\n\n    for (const fieldName in data) {\n        for (const validateMethod in config[fieldName]) {\n            const error = validate(\n                validateMethod,\n                data[fieldName],\n                config[fieldName][validateMethod]\n            );\n            if (error && !errors[fieldName]) {\n                errors[fieldName] = error;\n            }\n        }\n    }\n    return errors;\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst CheckBoxField = ({ name, value, onChange, children, error }) => {\n    const handleChange = () => {\n        onChange({\n            name: name,\n            value: !value\n        });\n    };\n    const getInputClasses = () => {\n        return \"form-check-input\" + error ? \" is-invalid\" : \"\";\n    };\n    return (\n        <div className=\"form-check mb-4\">\n            <input\n                className={getInputClasses()}\n                type=\"checkbox\"\n                value=\"\"\n                id={name}\n                onChange={handleChange}\n                checked={value}\n            />\n            <label className=\"form-check-label\" htmlFor={name}>\n                {children}\n            </label>\n            {error && <div className=\"invalid-feedback\">{error}</div>}\n        </div>\n    );\n};\nCheckBoxField.propTypes = {\n    name: PropTypes.string,\n    value: PropTypes.bool,\n    onChange: PropTypes.func,\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ]),\n    error: PropTypes.string\n};\nexport default CheckBoxField;\n","import React, { useEffect, useState } from \"react\";\nimport TextField from \"../common/form/textField\";\nimport { validator } from \"../../utils/validator\";\nimport CheckBoxField from \"../common/form/checkBoxField\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getAuthErrors, login } from \"../../store/users\";\nimport { useHistory } from \"react-router-dom\";\n// import * as yup from 'yup'\n\nconst LoginForm = () => {\n    const [data, setData] = useState({\n        email: \"\",\n        password: \"\",\n        stayOn: false\n    });\n    const loginError = useSelector(getAuthErrors());\n    const history = useHistory();\n    const dispatch = useDispatch();\n    const [errors, setErrors] = useState({});\n\n    const handleChange = (target) => {\n        setData((prevState) => ({\n            ...prevState,\n            [target.name]: target.value\n        }));\n    };\n\n    // let validateSchema = yup.object().shape({\n    //     password: yup.string()\n    //         .required('Enter your password')\n    //         .matches(/(?=.*[A-Z])/,'Password must contain at least one capital letter')\n    //         .matches(/(?=.*[0-9])/,'Password must contain at least one digit')\n    //         .matches(/(?=.*[!@#$%^&*])/,'Password must contain at least one special symbol !@#$%^&*')\n    //         .matches(/(?=.{8,})/,'Password must contain min 8 symbols'),\n    //     email: yup.string().required('Enter your email').email('Incorrect email')\n    // });\n\n    const validatorConfig = {\n        email: {\n            isRequired: {\n                message: \"Электронная почта обязательна для заполнения\"\n            }\n        },\n        password: {\n            isRequired: {\n                message: \"Пароль обязателен для заполнения\"\n            }\n        }\n    };\n\n    useEffect(() => {\n        validate();\n    }, [data]);\n\n    const validate = () => {\n        const errors = validator(data, validatorConfig);\n        // validateSchema.validate(data,{abortEarly:false}).then(()=>).catch((err)=>)\n        // validateSchema.validate(data)\n        //     .then(()=>setErrors({}))\n        //     .catch((err)=>setErrors({[err.path]:err.message}))\n        setErrors(errors);\n        return Object.keys(errors).length === 0;\n    };\n\n    const isValid = Object.keys(errors).length === 0;\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const isValid = validate();\n        if (!isValid) return;\n\n        const redirect = history.location.state ?\n            history.location.state.from.pathname :\n            \"/\";\n\n        dispatch(login({\n            payload: data,\n            redirect\n        }));\n\n    };\n    return (\n        <form onSubmit={handleSubmit}>\n            <TextField\n                label=\"Электронная почта\"\n                name=\"email\"\n                value={data.email}\n                onChange={handleChange}\n                error={errors.email}\n            />\n            <TextField\n                label=\"Пароль\"\n                type=\"password\"\n                name=\"password\"\n                value={data.password}\n                onChange={handleChange}\n                error={errors.password}\n            />\n            <CheckBoxField\n                value={data.stayOn}\n                onChange={handleChange}\n                name=\"stayOn\"\n            >\n                Stay logged in\n            </CheckBoxField>\n            {loginError && <p className=\"text-danger\">{loginError}</p>}\n            <button\n                type=\"submit\"\n                disabled={!isValid}\n                className=\"btn btn-primary w-100 mx-auto\"\n            >\n                Submit\n            </button>\n        </form>\n    );\n};\nexport default LoginForm;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst SelectField = ({\n    label,\n    value,\n    onChange,\n    defaultOption,\n    options,\n    name,\n    error\n}) => {\n    const handleChange = ({ target }) => {\n        onChange({\n            name: target.name,\n            value: target.value\n        });\n    };\n    const getInputClasses = () => {\n        return \"form-select\" + error ? \" is-invalid\" : \"\";\n    };\n    //My version\n    // const optionsArray =\n    //     !Array.isArray(options) && typeof options === \"object\"\n    //         ? Object.keys(options).map((optionName) => ({\n    //             name: options[optionName].name,\n    //             value: options[optionName]._id\n    //         }))\n    //         : options &&\n    //         options.map((option) => ({\n    //             name: option.name,\n    //             value: option._id\n    //         }));\n\n    //Roman version\n    // let optionsArray = [];\n    // if (!Array.isArray(options) && typeof options === \"object\") {\n    //     optionsArray = Object.keys(options).map((optionName) => ({\n    //         name: options[optionName].name,\n    //         value: options[optionName]._id\n    //     }));\n    // }\n    // if (Array.isArray(options)) {\n    //     optionsArray = options.map((option) => ({\n    //         name: option.name,\n    //         value: option._id\n    //     }));\n    // }\n\n    //Vasiliy version\n    const optionsArray =\n        !Array.isArray(options) && typeof options === \"object\"\n            ? Object.keys(options).map((optionName) => ({\n                // name: options[optionName].label,\n                // value: options[optionName].value\n                name: options[optionName].name,\n                value: options[optionName]._id\n            }))\n            : options;\n\n    return (\n        <div className=\"mb-4\">\n            <label htmlFor={name} className=\"form-label\">\n                {label}\n            </label>\n            <select\n                className={getInputClasses()}\n                id={name}\n                name={name}\n                value={value}\n                onChange={handleChange}\n            >\n                <option disabled value=\"\">\n                    {defaultOption}\n                </option>\n                {optionsArray &&\n                    optionsArray.map((option) => (\n                        <option key={option.value} value={option.value}>\n                            {option.label}\n                        </option>\n                    ))}\n            </select>\n            {error && <div className=\"invalid-feedback\">{error}</div>}\n        </div>\n    );\n};\n\n// SelectField.defaultProps = {\n//     defaultOption: \"Выберите...\"\n// };\n\nSelectField.propTypes = {\n    defaultOption: PropTypes.string,\n    label: PropTypes.string,\n    name: PropTypes.string,\n    value: PropTypes.string,\n    error: PropTypes.string,\n    onChange: PropTypes.func,\n    options: PropTypes.oneOfType([PropTypes.object, PropTypes.array])\n};\nexport default SelectField;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst RadioField = ({ options, name, onChange, value, label }) => {\n    const handleChange = ({ target }) => {\n        onChange({\n            name: target.name,\n            value: target.value\n        });\n    };\n    return (\n        <div className=\"mb-4 \">\n            <label className=\"form-label\">{label}</label>\n            <div>\n                {options.map((option) => (\n                    <div\n                        key={option.name + \"_\" + option.value}\n                        className=\"form-check form-check-inline\"\n                    >\n                        <input\n                            className=\"form-check-input\"\n                            type=\"radio\"\n                            name={name}\n                            id={option.name + \"_\" + option.value}\n                            checked={option.value === value}\n                            value={option.value}\n                            onChange={handleChange}\n                        />\n                        <label\n                            className=\"form-check-label\"\n                            htmlFor={option.name + \"_\" + option.value}\n                        >\n                            {option.name}\n                        </label>\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n};\nRadioField.propTypes = {\n    options: PropTypes.array,\n    label: PropTypes.string,\n    name: PropTypes.string,\n    onChange: PropTypes.func,\n    value: PropTypes.string\n};\n\nexport default RadioField;\n","import React from \"react\";\nimport Select from \"react-select\";\nimport PropTypes from \"prop-types\";\n\nconst MultiSelectField = ({ options, onChange, name, label, defaultValue }) => {\n    const optionsArray =\n        !Array.isArray(options) && typeof options === \"object\"\n            ? Object.keys(options).map((optionName) => ({\n                label: options[optionName].name,\n                value: options[optionName]._id\n            }))\n            : options;\n    const handleChange = (value) => {\n        onChange({ name: name, value });\n    };\n    return (\n        <div className=\"mb-4\">\n            <label className=\"form-label\">{label}</label>\n            <Select\n                isMulti\n                closeMenuOnSelect={false}\n                defaultValue={defaultValue}\n                options={optionsArray}\n                className=\"basic-multi-select\"\n                classNamePrefix=\"select\"\n                onChange={handleChange}\n                name={name}\n            />\n        </div>\n    );\n};\nMultiSelectField.propTypes = {\n    options: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n    onChange: PropTypes.func,\n    name: PropTypes.string,\n    label: PropTypes.string,\n    defaultValue: PropTypes.array\n};\n\nexport default MultiSelectField;\n","import httpService from \"./http.service\";\r\n\r\nconst qualityEndpoint = \"quality/\";\r\n\r\nconst qualityService = {\r\n    fetchAll: async () => {\r\n        const { data } = await httpService.get(qualityEndpoint);\r\n        return data;\r\n    }\r\n};\r\nexport default qualityService;\r\n","export function isOutdated(date) {\r\n    if (Date.now() - date > 10 * 60 * 1000) {\r\n        return true;\r\n    }\r\n    return false;\r\n}","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport qualityService from \"../services/quality.service\";\r\nimport { isOutdated } from \"../utils/isOutdated\";\r\n\r\nconst qualitiesSlice = createSlice({\r\n    name: \"qualities\",\r\n    initialState: {\r\n        entities: null,\r\n        isLoading: true,\r\n        error: null,\r\n        lastFetch: null\r\n    },\r\n    reducers: {\r\n        qualitiesRequested: (state) => {\r\n            state.isLoading = true;\r\n        },\r\n        qualitiesReceived: (state, action) => {\r\n            state.entities = action.payload;\r\n            state.lastFetch = Date.now();\r\n            state.isLoading = false;\r\n        },\r\n        qualitiesRequestFailed: (state, action) => {\r\n            state.error = action.payload;\r\n            state.isLoading = false;\r\n        },\r\n    }\r\n});\r\n\r\nconst {\r\n    reducer: qualitiesReducer,\r\n    actions\r\n} = qualitiesSlice;\r\nconst {\r\n    qualitiesRequested,\r\n    qualitiesReceived,\r\n    qualitiesRequestFailed\r\n} = actions;\r\n\r\nexport const loadQualitiesList = () => async (dispatch, getState) => {\r\n    const { lastFetch } = getState().qualities;\r\n    if (isOutdated(lastFetch)) {\r\n        console.log(\"lastFetch\", lastFetch);\r\n        dispatch(qualitiesRequested());\r\n        try {\r\n            const { content } = await qualityService.fetchAll();\r\n            dispatch(qualitiesReceived(content));\r\n        } catch (error) {\r\n            dispatch(qualitiesRequestFailed(error.message));\r\n        }\r\n    }\r\n};\r\n\r\nexport const getQualities = () => (state) => state.qualities.entities;\r\nexport const getQualitiesLoadingStatus = () => (state) => state.qualities.isLoading;\r\nexport const getQualitiesByIds = (qualitiesIds) => (state) => {\r\n    if (state.qualities.entities) {\r\n        const qualitiesArray = [];\r\n        for (const qualId of qualitiesIds) {\r\n            for (const quality of state.qualities.entities) {\r\n                if (quality._id === qualId) {\r\n                    qualitiesArray.push(quality);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return qualitiesArray;\r\n    }\r\n    return [];\r\n\r\n};\r\n\r\nexport default qualitiesReducer;","import httpService from \"./http.service\";\r\n\r\nconst professionEndpoint = \"profession/\";\r\n\r\nconst professionService = {\r\n    get: async () => {\r\n        const { data } = await httpService.get(professionEndpoint);\r\n        return data;\r\n    }\r\n};\r\nexport default professionService\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport professionService from \"../services/profession.service\";\r\nimport { isOutdated } from \"../utils/isOutdated\";\r\n\r\nconst professionsSlice = createSlice({\r\n    name: \"profession\",\r\n    initialState: {\r\n        entities: null,\r\n        isLoading: true,\r\n        error: null,\r\n        lastFetch: null\r\n    },\r\n    reducers: {\r\n        professionsRequested: (state) => {\r\n            state.isLoading = true;\r\n        },\r\n        professionsReceived: (state, action) => {\r\n            state.entities = action.payload;\r\n            state.lastFetch = Date.now();\r\n            state.isLoading = false;\r\n        },\r\n        professionsRequestFailed: (state, action) => {\r\n            state.error = action.payload;\r\n            state.isLoading = false;\r\n        }\r\n    }\r\n});\r\n\r\nconst {\r\n    reducer: professionsReducer,\r\n    actions\r\n} = professionsSlice;\r\n\r\nconst {\r\n    professionsRequested,\r\n    professionsReceived,\r\n    professionsRequestFailed\r\n} = actions;\r\n\r\nexport const loadProfessionsList = () => async (dispatch, getState) => {\r\n    const { lastFetch } = getState().professions;\r\n    if (isOutdated(lastFetch)) {\r\n        dispatch(professionsRequested());\r\n\r\n        try {\r\n            const { content } = await professionService.get();\r\n            dispatch(professionsReceived(content));\r\n        } catch (error) {\r\n            dispatch(professionsRequestFailed(error.message));\r\n        }\r\n    }\r\n};\r\n\r\nexport const getProfessions = () => (state) => state.professions.entities;\r\nexport const getProfessionsLoadingStatus = () => (state) => state.professions.isLoading;\r\nexport const getProfessionById = (id) => (state) => {\r\n    if (state.professions.entities) {\r\n        return state.professions.entities.find((p) => p._id === id);\r\n    }\r\n\r\n};\r\nexport default professionsReducer;","import React, { useEffect, useState } from \"react\";\nimport { validator } from \"../../utils/validator\";\nimport TextField from \"../common/form/textField\";\nimport SelectField from \"../common/form/selectField\";\nimport RadioField from \"../common/form/radioField\";\nimport MultiSelectField from \"../common/form/multiSelectField\";\nimport CheckBoxField from \"../common/form/checkBoxField\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getQualities } from \"../../store/qualities\";\nimport { signUp } from \"../../store/users\";\nimport { getProfessions } from \"../../store/professions\";\n\nconst RegisterForm = () => {\n    const dispatch = useDispatch();\n    const [data, setData] = useState({\n        email: \"\",\n        password: \"\",\n        profession: \"\",\n        name: \"\",\n        sex: \"male\",\n        qualities: [],\n        licence: false\n    });\n\n    const qualities = useSelector(getQualities());\n    const qualitiesList = qualities.map((q) => ({\n                label: q.name,\n                value: q._id\n            }\n        )\n    );\n\n    const professions = useSelector(getProfessions());\n    const professionList = professions.map((p) => ({\n                label: p.name,\n                value: p._id\n            }\n        )\n    );\n\n    const [errors, setErrors] = useState({});\n\n    const handleChange = (target) => {\n        setData((prevState) => ({\n            ...prevState,\n            [target.name]: target.value\n        }));\n    };\n    const validatorConfig = {\n        email: {\n            isRequired: {\n                message: \"Электронная почта обязательна для заполнения\"\n            },\n            isEmail: {\n                message: \"Email введен некорректно\"\n            }\n        },\n        name: {\n            isRequired: {\n                message: \"Имя обязательно для заполнения\"\n            },\n            min: {\n                message: \"Имя должно состоять минимум из 3 символов\",\n                value: 3\n            }\n        },\n        password: {\n            isRequired: {\n                message: \"Пароль обязателен для заполнения\"\n            },\n            isCapitalSymbol: {\n                message: \"Пароль должен содержать хотя бы одну заглавную букву\"\n            },\n            isContainDigit: {\n                message: \"Пароль должен содержать хотя бы одно число\"\n            },\n            min: {\n                message: \"Пароль должен состоять минимум из 8 символов\",\n                value: 8\n            }\n        },\n        profession: {\n            isRequired: {\n                message: \"Обязательно выберите вашу профессию\"\n            }\n        },\n        licence: {\n            isRequired: {\n                message:\n                    \"Вы не можете использовать наш сервис без подтверждения лицензионного соглашения\"\n            }\n        }\n    };\n    useEffect(() => {\n        validate();\n    }, [data]);\n\n    const validate = () => {\n        const errors = validator(data, validatorConfig);\n        setErrors(errors);\n        return Object.keys(errors).length === 0;\n    };\n    const isValid = Object.keys(errors).length === 0;\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const isValid = validate();\n        if (!isValid) return;\n        const newData = {\n            ...data,\n            qualities: data.qualities.map((q) => q.value)\n        };\n        dispatch(signUp(newData));\n    };\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <TextField\n                label=\"Электронная почта\"\n                name=\"email\"\n                value={data.email}\n                onChange={handleChange}\n                error={errors.email}\n            />\n            <TextField\n                label=\"Имя\"\n                name=\"name\"\n                value={data.name}\n                onChange={handleChange}\n                error={errors.name}\n            />\n            <TextField\n                label=\"Пароль\"\n                type=\"password\"\n                name=\"password\"\n                value={data.password}\n                onChange={handleChange}\n                error={errors.password}\n            />\n            <SelectField\n                label=\"Выбери свою профессию\"\n                defaultOption=\"Choose...\"\n                options={professionList}\n                name=\"profession\"\n                onChange={handleChange}\n                value={data.profession}\n                error={errors.profession}\n            />\n            <RadioField\n                options={[\n                    {\n                        name: \"Male\",\n                        value: \"male\"\n                    },\n                    {\n                        name: \"Female\",\n                        value: \"female\"\n                    },\n                    {\n                        name: \"Other\",\n                        value: \"other\"\n                    }\n                ]}\n                value={data.sex}\n                name=\"sex\"\n                onChange={handleChange}\n                label=\"Выберите ваш пол\"\n            />\n            <MultiSelectField\n                options={qualitiesList}\n                onChange={handleChange}\n                defaultValue={data.qualities}\n                name=\"qualities\"\n                label=\"Выберите ваши качества\"\n            />\n            <CheckBoxField\n                value={data.licence}\n                onChange={handleChange}\n                name=\"licence\"\n                error={errors.licence}\n            >\n                Подтвердить <a>лицензионное соглашение</a>\n            </CheckBoxField>\n            <button\n                className=\"btn btn-primary w-100 mx-auto\"\n                type=\"submit\"\n                disabled={!isValid}\n            >\n                Submit\n            </button>\n        </form>\n    );\n};\n\nexport default RegisterForm;","import React, { useState } from \"react\";\nimport LoginForm from \"../components/ui/loginForm\";\nimport { useParams } from \"react-router-dom\";\nimport RegisterForm from \"../components/ui/registerForm\";\n\nconst Login = () => {\n    const { type } = useParams();\n    const [formType, setFormType] = useState(\n        type === \"register\" ? type : \"login\"\n    );\n    const toggleFormType = () => {\n        setFormType((prevState) =>\n            prevState === \"register\" ? \"login\" : \"register\"\n        );\n    };\n    return (\n        <div className=\"container mt-5\">\n            <div className=\"row\">\n                <div className=\".col-md-6 .offset-md-3 shadow p-4\">\n                    {formType === \"register\" ? (\n                        <>\n                            <h3 className=\"mb-4\">Register</h3>\n                            <RegisterForm />\n                            <p>\n                                Do you already have an account?{\" \"}\n                                <a role=\"button\" onClick={toggleFormType}>\n                                    {\" \"}\n                                    Sign In\n                                </a>\n                            </p>\n                        </>\n                    ) : (\n                        <>\n                            <h3 className=\"mb-4\">Login</h3>\n                            <LoginForm />\n                            <p>\n                                Do not have an account yet?{\" \"}\n                                <a role=\"button\" onClick={toggleFormType}>\n                                    {\" \"}\n                                    Sign Up\n                                </a>\n                            </p>\n                        </>\n                    )}\n                </div>\n            </div>\n        </div>\n    );\n};\nexport default Login;\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { getCurrentUserId } from \"../../store/users\";\r\n\r\nconst UserCard = ({ user }) => {\r\n    const history = useHistory();\r\n    const currentUserId = useSelector(getCurrentUserId());\r\n\r\n    const handleEditClick = () => {\r\n        history.push(history.location.pathname + \"/edit\");\r\n    };\r\n    return (\r\n        <div className=\"card mb-3\">\r\n            <div className=\"card-body\">\r\n                {currentUserId === user._id && (\r\n                    <button className=\"position-absolute top-0 end-0 btn btn-light btn-sm\">\r\n                        <i className=\"bi bi-gear\" onClick={handleEditClick}></i>\r\n                    </button>\r\n                )}\r\n\r\n                <div className=\"d-flex flex-column align-items-center text-center position-relative\">\r\n                    <img\r\n                        src={user.image}\r\n                        className=\"rounded-circle\"\r\n                        width=\"150\"\r\n                    />\r\n                    <div className=\"mt-3\">\r\n                        <h4>{user.name}</h4>\r\n                        <p className=\"text-secondary mb-1\">Профессия: {user.profession.name}</p>\r\n                        <div className=\"text-muted\">\r\n                            <i className=\"bi bi-caret-down-fill text-primary\" role=\"button\"></i>\r\n                            <i className=\"bi bi-caret-up text-secondary\" role=\"button\"></i>\r\n                            <span className=\"ms-2\">Rate: {user.rate}</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nUserCard.propTypes = {\r\n    user: PropTypes.object.isRequired\r\n};\r\n\r\nexport default UserCard;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Quality = ({\r\n    _id,\r\n    color,\r\n    name\r\n}) => {\r\n\r\n    return <span className={\"badge m-1 bg-\" + color} key={_id}>{name}</span>;\r\n};\r\n\r\nQuality.propTypes = {\r\n    _id: PropTypes.string.isRequired,\r\n    color:PropTypes.string,\r\n    name:PropTypes.string\r\n};\r\n\r\nexport default Quality;\r\n","import Qualities from \"./qualitiesList\";\n\nexport default Qualities;\n","import React, { useEffect } from \"react\";\r\nimport Quality from \"./quality\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getQualitiesByIds, getQualitiesLoadingStatus, loadQualitiesList } from \"../../../store/qualities\";\r\n\r\nconst QualitiesList = ({ qualities }) => {\r\n    const dispatch = useDispatch();\r\n    const isLoading = useSelector(getQualitiesLoadingStatus());\r\n    const qualitiesList = useSelector(getQualitiesByIds(qualities));\r\n\r\n    useEffect(() => {\r\n        dispatch(loadQualitiesList());\r\n    }, []);\r\n\r\n    if (isLoading) return \"Loading...\";\r\n\r\n    return (\r\n        <>\r\n            {qualitiesList.map((quality) => (\r\n                <Quality key={quality._id} {...quality}/>\r\n            ))}\r\n        </>\r\n    );\r\n\r\n};\r\n\r\nQualitiesList.propTypes = {\r\n    qualities: PropTypes.array\r\n};\r\nexport default QualitiesList;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Qualities from \"./qualities\";\r\n\r\nconst QualitiesCard = ({ data }) => {\r\n\r\n    return (\r\n        <div className=\"card mb-3\">\r\n            <div className=\"card-body d-flex flex-column justify-content-center text-center\">\r\n                <h5 className=\"card-title\">\r\n                    <span>Qualities</span>\r\n                </h5>\r\n                <p className=\"card-text\">\r\n                    <Qualities qualities={data}/>\r\n                </p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nQualitiesCard.propTypes = {\r\n    data: PropTypes.array\r\n};\r\n\r\nexport default QualitiesCard;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst MeetingsCard = ({ value }) => {\r\n\r\n    return (\r\n        <div className=\"card mb-3\">\r\n            <div className=\"card-body d-flex flex-column justify-content-center text-center\">\r\n                <h5 className=\"card-title\">\r\n                    <span>Completed meetings</span>\r\n                </h5>\r\n\r\n                <h1 className=\"display-1\">{value}</h1>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nMeetingsCard.propTypes = {\r\n    value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired\r\n};\r\n\r\nexport default MeetingsCard;","function displayDate(data) {\r\n    const date = new Date(data);\r\n    const dateNow = new Date();\r\n    const yearDif = dateNow.getFullYear() - date.getFullYear();\r\n    if (yearDif === 0) {\r\n        const dayDif = dateNow.getDay() - date.getDay();\r\n        if (dayDif === 0) {\r\n            const hourDif = dateNow.getHours() - date.getHours();\r\n            if (hourDif === 0) {\r\n                const minutesDif = dateNow.getMinutes() - date.getMinutes();\r\n\r\n                if (minutesDif >= 0 && minutesDif < 5) return \"1 минуту назад\";\r\n                if (minutesDif >= 5 && minutesDif < 10) return \"5 минут назад\";\r\n                if (minutesDif >= 10 && minutesDif < 30) {\r\n                    return \"10 минут назад\";\r\n                }\r\n                return \"30 минут назад\";\r\n            }\r\n            return `${date.getHours()}:${date.getMinutes()}`;\r\n        }\r\n\r\n        return `${date.getDay()} ${date.toLocaleString(\"default\", {\r\n            month: \"long\"\r\n        })}`;\r\n    }\r\n    return (\r\n        date.getFullYear() + \".\" + (date.getMonth() + 1) + \"_\" + date.getDate()\r\n    );\r\n}\r\nexport default displayDate","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport displayDate from \"../../../utils/displayDate\";\r\nimport { getCurrentUserId, getUserById } from \"../../../store/users\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst Comment = ({\r\n    _id: id,\r\n    userId,\r\n    content,\r\n    created_at: createdAt,\r\n    onRemove\r\n}) => {\r\n    const user = useSelector(getUserById(userId));\r\n    const currentUserId = useSelector(getCurrentUserId());\r\n    return (\r\n        <div className=\"bg-light card-body mb-3\">\r\n            <div className=\"row\">\r\n                <div className=\"col\">\r\n                    <div className=\"d-flex flex-start\">\r\n                        <img\r\n                            src={user.image}\r\n                            className=\"rounded-circle shadow-1-strong me-3\"\r\n                            alt=\"avatar\"\r\n                            width=\"65\"\r\n                            height=\"65\"\r\n                        />\r\n                        <div className=\"flex-grow-1 flex-shrink-1\">\r\n                            <div className=\"mb-4\">\r\n                                <div className=\"d-flex justify-content-between align-items-center\">\r\n                                    <p className=\"mb-1\">\r\n                                        {user && user.name}{\" \"}\r\n                                        <span className=\"small\">\r\n                                               - {displayDate(createdAt)}\r\n                                            </span>\r\n                                    </p>\r\n                                    {currentUserId === userId && <button\r\n                                        className=\"btn btn-sm text-primary d-flex align-items-center\"\r\n                                        onClick={() => {\r\n                                            onRemove(id);\r\n                                        }}\r\n                                    >\r\n                                        <i className=\"bi bi-x-lg\"></i>\r\n                                    </button>}\r\n\r\n                                </div>\r\n                                <p className=\"small mb-0\">{content}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nComment.propTypes = {\r\n    comment: PropTypes.object,\r\n    onRemove: PropTypes.func.isRequired\r\n};\r\nexport default Comment;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Comment from \"./comment\";\r\n\r\nconst CommentList = ({ comments, onRemove }) => {\r\n    return comments.map((comment) => (\r\n        <Comment key={comment._id} {...comment} onRemove={onRemove} />\r\n    ));\r\n};\r\nCommentList.propTypes = {\r\n    comments: PropTypes.arrayOf(PropTypes.object),\r\n    onRemove: PropTypes.func.isRequired\r\n};\r\n\r\nexport default CommentList;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst TextAreaField = ({\r\n    label,\r\n    name,\r\n    value,\r\n    onChange,\r\n    error,\r\n    placeholder,\r\n    rows\r\n}) => {\r\n    const handleChange = ({ target }) => {\r\n        onChange({\r\n            name: target.name,\r\n            value: target.value\r\n        });\r\n    };\r\n    const renderInputClasses = () => {\r\n        return \"form-control\" + (error ? \" is-invalid\" : \"\");\r\n    };\r\n    return (\r\n        <div className=\"mb-4\">\r\n            <label htmlFor={name}>{label}</label>\r\n            <div className=\"input-group has-validation\">\r\n                <textarea\r\n                    id={name}\r\n                    value={value}\r\n                    name={name}\r\n                    onChange={handleChange}\r\n                    placeholder={placeholder}\r\n                    className={renderInputClasses()}\r\n                    rows={rows}\r\n                />\r\n                {error && <div className=\"invalid-feedback\">{error}</div>}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nTextAreaField.defaultProps = {\r\n    placeholder: \"\",\r\n    rows: 3\r\n};\r\n\r\nTextAreaField.propTypes = {\r\n    label: PropTypes.string,\r\n    name: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    error: PropTypes.string,\r\n    placeholder: PropTypes.string,\r\n    rows: PropTypes.number\r\n};\r\n\r\nexport default TextAreaField;","import React, { useState } from \"react\";\r\nimport { validator } from \"../../../utils/validator\";\r\nimport TextAreaField from \"../form/textAreaField\";\r\n\r\nconst AddCommentForm = ({ onAdd }) => {\r\n    const [data, setData] = useState({});\r\n    const [errors, setErrors] = useState({});\r\n\r\n    const validatorConfig = {\r\n        content: {\r\n            isRequired: {\r\n                message: \"Fill the comment\"\r\n            }\r\n        }\r\n    };\r\n\r\n    const validate = () => {\r\n        const errors = validator(data, validatorConfig);\r\n        setErrors(errors);\r\n        return Object.keys(errors).length === 0;\r\n    };\r\n\r\n    const handleChange = (target) => {\r\n        setData((prevState) => ({\r\n            ...prevState,\r\n            [target.name]: target.value\r\n        }));\r\n    };\r\n\r\n    const clearForm = () => {\r\n        setData({});\r\n        setErrors({});\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const isValid = validate();\r\n        if (!isValid) return;\r\n        onAdd(data);\r\n        clearForm();\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>New comment</h2>\r\n            <form onSubmit={handleSubmit}></form>\r\n            <div className=\"mb-4\">\r\n            </div>\r\n            <TextAreaField\r\n                label=\"Сообщение\"\r\n                name=\"content\"\r\n                value={data.content || \"\"}\r\n                onChange={handleChange}\r\n                error={errors.content}\r\n            />\r\n            <div className=\"d-flex justify-content-end\" onClick={handleSubmit}>\r\n                <button className=\"btn btn-primary\">Опубликовать</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default AddCommentForm;","import httpService from \"./http.service\";\r\n\r\nconst commentEndpoint = \"comment/\";\r\n\r\nconst commentService = {\r\n    createComment: async (payload) => {\r\n        const { data } = await httpService.post(commentEndpoint, payload);\r\n        return data;\r\n    },\r\n    getComments: async (pageId) => {\r\n        const { data } = await httpService.get(\r\n            commentEndpoint, {\r\n                params: {\r\n                    orderBy: \"pageId\",\r\n                    equalTo: `${pageId}`\r\n                }\r\n            }\r\n        );\r\n        return data;\r\n    },\r\n    removeComment: async (commentId) => {\r\n        const { data } = await httpService.delete(\r\n            commentEndpoint + commentId,\r\n        );\r\n        return data;\r\n    }\r\n};\r\nexport default commentService;\r\n","import { createAction, createSlice } from \"@reduxjs/toolkit\";\r\nimport commentService from \"../services/comment.service\";\r\n\r\nconst commentsSlice = createSlice({\r\n    name: \"comments\",\r\n    initialState: {\r\n        entities: null,\r\n        isLoading: true,\r\n        error: null,\r\n    },\r\n    reducers: {\r\n        commentsRequested: (state) => {\r\n            state.isLoading = true;\r\n        },\r\n        commentsReceived: (state, action) => {\r\n            state.entities = action.payload;\r\n            state.isLoading = false;\r\n        },\r\n        commentsRequestFailed: (state, action) => {\r\n            state.error = action.payload;\r\n            state.isLoading = false;\r\n        },\r\n        commentRemoved: (state, action) => {\r\n            state.entities = state.entities.filter(\r\n                (c) => c._id !== action.payload\r\n            );\r\n        },\r\n        commentCreated: (state, action) => {\r\n            state.entities.push(action.payload);\r\n        },\r\n    }\r\n});\r\n\r\nconst {\r\n    reducer: commentsReducer,\r\n    actions\r\n} = commentsSlice;\r\n\r\nconst {\r\n    commentsRequested,\r\n    commentsReceived,\r\n    commentsRequestFailed,\r\n    commentRemoved,\r\n    commentCreated,\r\n} = actions;\r\n\r\nconst addCommentRequested = createAction(\"comments/addCommentRequested\");\r\nconst removeCommentRequested = createAction(\"comments/removeCommentRequested\");\r\n\r\nexport const loadCommentsList = (userId) => async (dispatch) => {\r\n    dispatch(commentsRequested());\r\n\r\n    try {\r\n        const { content } = await commentService.getComments(userId);\r\n        dispatch(commentsReceived(content));\r\n    } catch (error) {\r\n        dispatch(commentsRequestFailed(error.message));\r\n    }\r\n};\r\n\r\nexport const createComment = (payload) => async (dispatch, getState) => {\r\n    dispatch(addCommentRequested(payload));\r\n    try {\r\n        const { content } = await commentService.createComment(payload);\r\n        dispatch(commentCreated(content));\r\n    } catch (error) {\r\n        dispatch(commentsRequestFailed(error.message));\r\n    }\r\n};\r\n\r\nexport const removeComment = (commentId) => async (dispatch) => {\r\n    dispatch(removeCommentRequested());\r\n    try {\r\n        const { content } = await commentService.removeComment(commentId);\r\n        if (!content) {\r\n            dispatch(commentRemoved(commentId));\r\n        }\r\n    } catch (error) {\r\n        dispatch(commentsRequestFailed(error.message));\r\n    }\r\n};\r\n\r\nexport const getComments = () => (state) => state.comments.entities;\r\nexport const getCommentsLoadingStatus = () => (state) => state.comments.isLoading;\r\n\r\nexport default commentsReducer;","import React, { useEffect } from \"react\";\r\nimport { orderBy } from \"lodash\";\r\nimport CommentList from \"../common/comments/commentList\";\r\nimport { AddCommentForm } from \"../common/comments\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n    createComment,\r\n    getComments,\r\n    getCommentsLoadingStatus,\r\n    loadCommentsList,\r\n    removeComment\r\n} from \"../../store/comments\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst Comments = () => {\r\n    const { userId } = useParams();\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(loadCommentsList(userId));\r\n    }, [userId]);\r\n\r\n    const isLoading = useSelector(getCommentsLoadingStatus());\r\n\r\n    const comments = useSelector(getComments());\r\n\r\n    const handleRemoveComment = (id) => {\r\n        dispatch(removeComment(id));\r\n    };\r\n    const handleSubmit = (data) => {\r\n        dispatch(createComment({\r\n            ...data,\r\n            pageId: userId\r\n        }));\r\n    };\r\n    const sortedComments = orderBy(comments, [\"created_at\"], [\"desc\"]);\r\n    return (\r\n        <>\r\n            <div className=\"card mb-2\">\r\n                <div className=\"card-body\">\r\n                    <AddCommentForm onAdd={handleSubmit}/>\r\n                </div>\r\n            </div>\r\n            {sortedComments.length > 0 && (\r\n                <div className=\"card mb-3\">\r\n                    <div className=\"card-body\">\r\n                        <h2>Comments</h2>\r\n                        <hr/>\r\n                        {!isLoading ? (\r\n                            <CommentList\r\n                                comments={sortedComments}\r\n                                onRemove={handleRemoveComment}\r\n                            />\r\n                        ) : (\"Loading...\")\r\n                        }\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Comments;","import UserPage from \"./userPage\";\n\nexport default UserPage;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport UserCard from \"../../ui/userCard\";\nimport QualitiesCard from \"../../ui/qualitiesCard\";\nimport MeetingsCard from \"../../ui/meetingsCard\";\nimport Comments from \"../../ui/comments\";\nimport { getUserById } from \"../../../store/users\";\nimport { useSelector } from \"react-redux\";\n\nconst UserPage = ({ userId }) => {\n    const user = useSelector(getUserById(userId));\n\n    if (user) {\n        return (\n            <div className=\"container\">\n                <div className=\"row gutters-sm\">\n                    {/* left column */}\n                    <div className=\"col-md-4 mb-3\">\n                        <UserCard user={user}/>\n                        <QualitiesCard data={user.qualities}/>\n                        <MeetingsCard value={user.completedMeetings}/>\n                    </div>\n                    {/* right column */}\n                    <div className=\"col-md-8\">\n                            <Comments/>\n                    </div>\n                </div>\n            </div>\n        );\n    } else {\n        return <h1>Loading</h1>;\n    }\n};\n\nUserPage.propTypes = {\n    userId: PropTypes.string.isRequired\n};\n\nexport default UserPage;\n","import React from \"react\";\nimport _ from \"lodash\";\nimport PropTypes from \"prop-types\";\n\nconst Pagination = ({ itemsCount, pageSize, onPageChange, currentPage }) => {\n    const pageCount = Math.ceil(itemsCount / pageSize);\n    if (pageCount === 1) return null;\n    const pages = _.range(1, pageCount + 1);\n\n    return (\n        <nav aria-label=\"Page navigation example\">\n            <ul className=\"pagination\">\n                {pages.map((page) => (\n                    <li\n                        className={\n                            \"page-item\" +\n                            (page === currentPage ? \" active\" : \"\")\n                        }\n                        key={\"page_\" + page}\n                    >\n                        <button\n                            className=\"page-link\"\n                            onClick={() => onPageChange(page)}\n                        >\n                            {page}\n                        </button>\n                    </li>\n                ))}\n            </ul>\n        </nav>\n    );\n};\n\nPagination.propTypes = {\n    itemsCount: PropTypes.number.isRequired,\n    pageSize: PropTypes.number.isRequired,\n    onPageChange: PropTypes.func.isRequired,\n    currentPage: PropTypes.number.isRequired\n};\n\nexport default Pagination;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst GroupList = ({\n    items,\n    valueProperty,\n    contentProperty,\n    onItemSelect,\n    selectedItem\n}) => {\n    return (\n        <ul className=\"list-group\">\n            {items != null &&\n                typeof items === \"object\" &&\n                Object.keys(items).map((item) => (\n                    // <li key={items[item]._id} className=\"list-group-item\">\n                    <li\n                        key={items[item][valueProperty]}\n                        className={\n                            \"list-group-item\" +\n                            (items[item] === selectedItem ? \"active\" : \"\")\n                        }\n                        onClick={() => onItemSelect(items[item])}\n                        role=\"button\"\n                    >\n                        {/* {items[item].name} */}\n                        {items[item][contentProperty]}\n                    </li>\n                ))}\n\n            {items != null &&\n                typeof items !== \"object\" &&\n                items.isArray() &&\n                items.map((item) => (\n                    <li\n                        key={items[item][valueProperty]}\n                        className={\n                            \"list-group-item\" +\n                            (items[item] === selectedItem ? \"active\" : \"\")\n                        }\n                        onClick={() => onItemSelect(items[item])}\n                        role=\"button\"\n                    >\n                        {items[item][contentProperty]}\n                    </li>\n                ))}\n        </ul>\n    );\n};\n\nGroupList.defaultProps = {\n    valueProperty: \"_id\",\n    contentProperty: \"name\"\n};\n\nGroupList.propTypes = {\n    items: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n    valueProperty: PropTypes.string.isRequired,\n    contentProperty: PropTypes.string.isRequired,\n    onItemSelect: PropTypes.func,\n    selectedItem: PropTypes.object\n};\n\nexport default GroupList;\n","import React from \"react\";\n\nconst SearchStatus = (props) => {\n    const { number } = props;\n    const getBadgeClasses = () => {\n        let classes = \"badge rounded-pill \";\n        classes += number === 0 ? \"bg-warning\" : \"bg-primary\";\n        return classes;\n    };\n\n    const renderPhrase = (number) => {\n        let suffix1 = null;\n        let suffix2 = null;\n        const n = number % 10;\n\n        if (n === 1 || (number >= 5 && number <= 20) || n === 0) {\n            suffix1 = \"\";\n            suffix2 = \"ет\";\n        } else if (n >= 2 && n <= 4) {\n            suffix1 = \"а\";\n            suffix2 = \"ут\";\n        }\n        const phrase =\n            number + ` человек${suffix1} тусан${suffix2} с тобой сегодня`;\n        return number === 0 ? \"Никто с тобой не тусанет\" : phrase;\n    };\n\n\n    return (\n        <>\n            {\" \"}\n            <span className={getBadgeClasses()}>{renderPhrase(number)}</span>\n        </>\n    );\n};\n\nexport default SearchStatus;\n\n// import React from \"react\";\n// import PropTypes from \"prop-types\";\n// import declOfNum from \"../../utils/declOfNum\";\n//\n// const SearchStatus = ({ number }) => {\n//     const variantsPhrases = [\n//         \"человек тусанет\",\n//         \"человека тусанут\",\n//         \"человек тусанут\"\n//     ];\n//\n//     let classes = \"badge m-1 bg-\";\n//     classes += number === 0 ? \"danger\" : \"primary\";\n//     let phrase;\n//\n//     //ToDO fix bug with 0 users quantity\n//     if (number === 0) {\n//         phrase = \"Никто не тусанет\";\n//     } else {\n//         phrase = `${number} ${declOfNum(number, variantsPhrases)}`;\n//     }\n//\n//     return (\n//         <h2>\n//             <span className={classes}>{phrase} с тобой сегодня</span>\n//         </h2>\n//     );\n// };\n//\n// SearchStatus.propTypes = {\n//     number: PropTypes.number.isRequired\n// };\n//\n// export default SearchStatus;","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst TableHeader = ({ onSort, selectedSort, columns }) => {\n    const handleSort = (item) => {\n        if (selectedSort.path === item) {\n            onSort({\n                ...selectedSort,\n                order: selectedSort.order === \"asc\" ? \"desc\" : \"asc\"\n            });\n        } else {\n            onSort({ path: item, order: \"asc\" });\n        }\n    };\n\n    function renderArrow(path, selectedSort) {\n        if (selectedSort.path && selectedSort.path === path) {\n            return selectedSort.order === \"asc\" ? (\n                <i className=\"bi bi-caret-up-fill\" />\n            ) : (\n                <i className=\"bi bi-caret-down-fill\" />\n            );\n        }\n        return null;\n    }\n\n    return (\n        <thead className=\"head\">\n            <tr>\n                {Object.keys(columns).map((column) => (\n                    <th\n                        key={column}\n                        onClick={\n                            columns[column].path\n                                ? () => handleSort(columns[column].path)\n                                : undefined\n                        }\n                        {...{ role: columns[column].path && \"button\" }}\n                        scope=\"col\"\n                    >\n                        {columns[column].name}\n                        {renderArrow(columns[column].path, selectedSort)}\n                    </th>\n                ))}\n            </tr>\n        </thead>\n    );\n};\n\nTableHeader.propTypes = {\n    onSort: PropTypes.func.isRequired,\n    selectedSort: PropTypes.object.isRequired,\n    columns: PropTypes.object.isRequired\n};\n\nexport default TableHeader;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport _ from \"lodash\";\n\nconst TableBody = ({ data, columns }) => {\n    const renderContent = (item, column) => {\n        if (columns[column].component) {\n            const component = columns[column].component;\n            if (typeof component === \"function\") {\n                return component(item);\n            }\n            return component;\n        }\n        return _.get(item, columns[column].path);\n    };\n\n    return (\n        <tbody>\n            {data.map((item) => (\n                <tr key={item._id}>\n                    {Object.keys(columns).map((column) => (\n                        <td key={column}>{renderContent(item, column)}</td>\n                    ))}\n                </tr>\n            ))}\n        </tbody>\n    );\n};\n\nTableBody.propTypes = {\n    data: PropTypes.array.isRequired,\n    columns: PropTypes.object.isRequired\n};\nexport default TableBody;\n","import Table from \"./table\";\nimport TableBody from \"./tableBody\";\nimport TableHeader from \"./tableHeader\";\n\nexport default Table;\n\nexport { TableBody, TableHeader };\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport TableHeader from \"./tableHeader\";\nimport TableBody from \"./tableBody\";\n\n// const Table = ({onSort, selectedSort, columns, data}) => {\nconst Table = ({ onSort, selectedSort, columns, data, children }) => {\n    return (\n        <table className=\"table\">\n            {children || (\n                <>\n                    <TableHeader {...{ onSort, selectedSort, columns }} />\n                    <TableBody {...{ columns, data }} />\n                </>\n            )}\n        </table>\n    );\n};\n\nTable.propTypes = {\n    onSort: PropTypes.func,\n    selectedSort: PropTypes.object,\n    columns: PropTypes.object,\n    data: PropTypes.array,\n    children: PropTypes.array\n};\n\nexport default Table;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Bookmark = ({ status, ...rest }) => {\n    return (\n        <button {...rest}>\n            <i className={\"bi bi-bookmark\" + (status ? \"-heart-fill\" : \"\")} />\n        </button>\n    );\n};\n\nBookmark.propTypes = {\n    status: PropTypes.bool\n};\nexport default Bookmark;\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { getProfessionById, getProfessionsLoadingStatus } from \"../../store/professions\";\r\n\r\nconst Profession = ({ id }) => {\r\n    const isLoading = useSelector(getProfessionsLoadingStatus());\r\n    const prof = useSelector(getProfessionById(id));\r\n\r\n    if (!isLoading) {\r\n        return <p>{prof.name}</p>;\r\n    } else {\r\n        return \"loading...\";\r\n    }\r\n};\r\n\r\nProfession.propTypes = {\r\n    id: PropTypes.string\r\n};\r\n\r\nexport default Profession;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Table from \"../common/table\";\r\nimport Bookmark from \"../common/bookmark\";\r\nimport Qualities from \"./qualities\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Profession from \"./profession\";\r\n\r\nconst UsersTable = ({\r\n    users,\r\n    onSort,\r\n    selectedSort,\r\n    onToggleBookMark,\r\n}) => {\r\n    const columns = {\r\n        name: {\r\n            path: \"name\",\r\n            name: \"Имя\",\r\n            component: (user) => (\r\n                <Link to={`users/${user._id}`}>{user.name}</Link>\r\n            )\r\n        },\r\n        qualities: {\r\n            name: \"Качества\",\r\n            component: (user) => <Qualities qualities={user.qualities}/>\r\n        },\r\n        professions: {\r\n            name: \"Профессия\",\r\n            component: (user) => <Profession id={user.profession}/>\r\n        },\r\n        completedMeetings: {\r\n            path: \"completedMeetings\",\r\n            name: \"Встретился, раз\"\r\n        },\r\n        rate: {\r\n            path: \"rate\",\r\n            name: \"Оценка\"\r\n        },\r\n        bookmark: {\r\n            path: \"bookmark\",\r\n            name: \"Избранное\",\r\n            component: (user) => (\r\n                <Bookmark\r\n                    status={user.bookmark}\r\n                    onClick={() => onToggleBookMark(user._id)}\r\n                />\r\n            )\r\n        },\r\n\r\n    };\r\n\r\n    return (\r\n        <Table\r\n            onSort={onSort}\r\n            selectedSort={selectedSort}\r\n            columns={columns}\r\n            data={users}\r\n        />\r\n    );\r\n};\r\n\r\nUsersTable.propTypes = {\r\n    users: PropTypes.array.isRequired,\r\n    onSort: PropTypes.func.isRequired,\r\n    selectedSort: PropTypes.object.isRequired,\r\n    onToggleBookMark: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default UsersTable;\r\n","import UsersListPage from \"./usersListPage\";\n\nexport default UsersListPage;\n","import React, { useEffect, useState } from \"react\";\r\nimport Pagination from \"../../common/pagination\";\r\nimport { paginate } from \"../../../utils/paginate\";\r\nimport PropTypes from \"prop-types\";\r\nimport GroupList from \"../../common/groupList\";\r\nimport SearchStatus from \"../../ui/searchStatus\";\r\nimport UsersTable from \"../../ui/usersTable\";\r\nimport _ from \"lodash\";\r\nimport TextField from \"../../common/form/textField\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { getCurrentUserId, getUsersList } from \"../../../store/users\";\r\nimport { getProfessions, getProfessionsLoadingStatus } from \"../../../store/professions\";\r\n\r\nconst UsersListPage = () => {\r\n    const users = useSelector(getUsersList());\r\n\r\n    const  currentUserId = useSelector(getCurrentUserId());\r\n\r\n    const professions = useSelector(getProfessions());\r\n    const professionsLoading = useSelector(getProfessionsLoadingStatus());\r\n\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [selectedProf, setSelectedProf] = useState();\r\n    const [sortBy, setSortBy] = useState({\r\n        iter: \"name\",\r\n        order: \"asc\"\r\n    });\r\n    const [searchQuery, setSearchQuery] = useState(\"\");\r\n    const pageSize = 8;\r\n\r\n    useEffect(() => {\r\n        setCurrentPage(1);\r\n    }, [selectedProf, searchQuery]);\r\n\r\n    const handleDelete = (userId) => {\r\n        // setUsers((prevState) =>\r\n        //     prevState.filter((user) => user._id !== userId)\r\n        // );\r\n        console.log(userId);\r\n    };\r\n\r\n    const handleToggleBookMark = (id) => {\r\n        // setUsers(\r\n        //     users.map((user) => {\r\n        //         if (user._id === id) {\r\n        //             return {\r\n        //                 ...user,\r\n        //                 bookmark: !user.bookmark\r\n        //             };\r\n        //         }\r\n        //         return user;\r\n        //     })\r\n        // );\r\n        console.log(\"newArray\");\r\n    };\r\n\r\n    const handlePageChange = (pageIndex) => {\r\n        setCurrentPage(pageIndex);\r\n    };\r\n\r\n    const handleSort = (item) => {\r\n        setSortBy(item);\r\n    };\r\n    // second method for clearing the filter\r\n    const clearFilter = () => {\r\n        setSelectedProf(undefined);\r\n    };\r\n\r\n    const handleProfessionSelect = (item) => {\r\n        if (searchQuery !== \"\") {\r\n            setSearchQuery(\"\");\r\n        }\r\n        setSelectedProf(item);\r\n    };\r\n\r\n    const handleSearchQuery = ({ target }) => {\r\n        setSearchQuery(target.value);\r\n        clearFilter();\r\n    };\r\n\r\n    if (!users) return <h2>loading....</h2>;\r\n\r\n    function filterUsers(data) {\r\n        const filteredUsers = searchQuery\r\n            ? data.filter(\r\n                (user) =>\r\n                    user.name\r\n                        .toLowerCase()\r\n                        .indexOf(searchQuery.toLowerCase()) !== -1\r\n            )\r\n            : selectedProf\r\n                ? data.filter(\r\n                    (user) =>\r\n                        JSON.stringify(user.profession) ===\r\n                        JSON.stringify(selectedProf)\r\n                )\r\n                : data;\r\n        return filteredUsers.filter((user) => user._id !== currentUserId);\r\n    }\r\n\r\n    const filteredUsers = filterUsers(users);\r\n    const count = filteredUsers.length;\r\n    const sortedUsers = _.orderBy(filteredUsers, [sortBy.path], [sortBy.order]); // 'asc'-ascending 'desc'-descending\r\n    const usersCrop = paginate(sortedUsers, currentPage, pageSize);\r\n\r\n    if (usersCrop.length === 0 && count) setCurrentPage((prev) => prev - 1);\r\n\r\n    if (users.length === 0) return <h2>No users left</h2>;\r\n\r\n    return (\r\n        <div className=\"d-flex\">\r\n            {professions && !professionsLoading && (\r\n                <div className=\"d-flex flex-column flex-shrink-0 p-3\">\r\n                    <GroupList\r\n                        selectedItem={selectedProf}\r\n                        items={professions}\r\n                        onItemSelect={handleProfessionSelect}\r\n                    />\r\n                    <button\r\n                        className=\"btn btn-secondary mt-2\"\r\n                        onClick={clearFilter}\r\n                    >\r\n                        {\" \"}\r\n                        Clear filter\r\n                    </button>\r\n                </div>\r\n            )}\r\n            <div className=\"d-flex flex-column\">\r\n                {<SearchStatus number={count}/>}\r\n                <TextField\r\n                    name=\"search\"\r\n                    value={searchQuery}\r\n                    onChange={handleSearchQuery}\r\n                    placeholder=\"Search...\"\r\n                />\r\n                {count > 0 && (\r\n                    <UsersTable\r\n                        users={usersCrop}\r\n                        onSort={handleSort}\r\n                        selectedSort={sortBy}\r\n                        onDelete={handleDelete}\r\n                        onToggleBookMark={handleToggleBookMark}\r\n                    />\r\n                )}\r\n                <div className=\"d-flex justify-content-center\">\r\n                    <Pagination\r\n                        itemsCount={count}\r\n                        pageSize={pageSize}\r\n                        currentPage={currentPage}\r\n                        onPageChange={handlePageChange}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nUsersListPage.propTypes = {\r\n    users: PropTypes.array\r\n};\r\nexport default UsersListPage;\r\n","export function paginate(items, pageNumber, pageSize) {\n    const startIndex = (pageNumber - 1) * pageSize;\n    return [...items].splice(startIndex, pageSize);\n}\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst BackHistoryButton = () => {\r\n    const history = useHistory();\r\n    return (\r\n        <button className=\"btn btn-primary\" onClick={() => history.goBack()}>\r\n            <i className=\"bi bi-caret-left\"></i>\r\n            Назад\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default BackHistoryButton;","import React, { useEffect, useState } from \"react\";\r\nimport { validator } from \"../../../utils/validator\";\r\nimport TextField from \"../../common/form/textField\";\r\nimport SelectField from \"../../common/form/selectField\";\r\nimport RadioField from \"../../common/form/radioField\";\r\nimport MultiSelectField from \"../../common/form/multiSelectField\";\r\nimport BackHistoryButton from \"../../common/backHistoryButton\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getQualities, getQualitiesLoadingStatus } from \"../../../store/qualities\";\r\nimport { getCurrentUserData, updateUser } from \"../../../store/users\";\r\nimport { getProfessions, getProfessionsLoadingStatus } from \"../../../store/professions\";\r\n\r\nconst UserEditPage = ({ userId }) => {\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    const [data, setData] = useState();\r\n    const dispatch = useDispatch();\r\n\r\n    const currentUser = useSelector(getCurrentUserData());\r\n    const qualities = useSelector(getQualities());\r\n    const qualitiesLoading = useSelector(getQualitiesLoadingStatus());\r\n\r\n    const qualitiesList = qualities.map((q) => ({\r\n                label: q.name,\r\n                value: q._id\r\n            }\r\n        )\r\n    );\r\n\r\n    const professions = useSelector(getProfessions());\r\n    const professionsLoading = useSelector(getProfessionsLoadingStatus());\r\n    const professionList = professions.map((p) => ({\r\n        label: p.name,\r\n        value: p._id\r\n    }));\r\n\r\n    const [errors, setErrors] = useState({});\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const isValid = validate();\r\n        if (!isValid) return;\r\n        dispatch(updateUser(\r\n            {\r\n                ...data,\r\n                qualities: data.qualities.map((q) => q.value)\r\n            }\r\n        ));\r\n    };\r\n\r\n    function getQualitiesListByIds(qualitiesIds) {\r\n        const qualitiesArray = [];\r\n\r\n        for (const qualId of qualitiesIds) {\r\n            for (const quality of qualities) {\r\n                if (quality._id === qualId) {\r\n                    qualitiesArray.push(quality);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return qualitiesArray;\r\n    }\r\n\r\n    const transformData = (data) => {\r\n        const result = getQualitiesListByIds(data).map((qual) => ({\r\n            label: qual.name,\r\n            value: qual._id\r\n        }));\r\n        return result;\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (!professionsLoading && !qualitiesLoading && currentUser && !data) {\r\n            setData({\r\n                ...currentUser,\r\n                qualities: transformData(currentUser.qualities)\r\n            });\r\n        }\r\n    }, [professionsLoading, qualitiesLoading, currentUser, data]);\r\n\r\n    useEffect(() => {\r\n        if (data && isLoading) {\r\n            setIsLoading(false);\r\n        }\r\n    }, [data]);\r\n\r\n    const validatorConfig = {\r\n        email: {\r\n            isRequired: {\r\n                message: \"Электронная почта обязательна для заполнения\"\r\n            },\r\n            isEmail: {\r\n                message: \"Email введен некорректно\"\r\n            }\r\n        },\r\n        name: {\r\n            isRequired: {\r\n                message: \"Введите ваше имя\"\r\n            }\r\n        }\r\n    };\r\n    useEffect(() => validate(), [data]);\r\n    const handleChange = (target) => {\r\n        setData((prevState) => ({\r\n            ...prevState,\r\n            [target.name]: target.value\r\n        }));\r\n    };\r\n    const validate = () => {\r\n        const errors = validator(data, validatorConfig);\r\n        setErrors(errors);\r\n        return Object.keys(errors).length === 0;\r\n    };\r\n    const isValid = Object.keys(errors).length === 0;\r\n    return (\r\n        <div className=\"container mt-5\">\r\n            <BackHistoryButton/>\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 offset-md-3 shadow p-4\">\r\n                    {!isLoading && Object.keys(professions).length > 0 ? (\r\n                        <form onSubmit={handleSubmit}>\r\n                            <TextField\r\n                                label=\"Имя\"\r\n                                name=\"name\"\r\n                                value={data.name}\r\n                                onChange={handleChange}\r\n                                error={errors.name}\r\n                            />\r\n                            <TextField\r\n                                label=\"Электронная почта\"\r\n                                name=\"email\"\r\n                                value={data.email}\r\n                                onChange={handleChange}\r\n                                error={errors.email}\r\n                            />\r\n                            <SelectField\r\n                                label=\"Выбери свою профессию\"\r\n                                defaultOption=\"Choose...\"\r\n                                options={professionList}\r\n                                name=\"profession\"\r\n                                onChange={handleChange}\r\n                                value={data.profession}\r\n                                error={errors.profession}\r\n                            />\r\n                            <RadioField\r\n                                options={[\r\n                                    {\r\n                                        name: \"Male\",\r\n                                        value: \"male\"\r\n                                    },\r\n                                    {\r\n                                        name: \"Female\",\r\n                                        value: \"female\"\r\n                                    },\r\n                                    {\r\n                                        name: \"Other\",\r\n                                        value: \"other\"\r\n                                    }\r\n                                ]}\r\n                                value={data.sex}\r\n                                name=\"sex\"\r\n                                onChange={handleChange}\r\n                                label=\"Выберите ваш пол\"\r\n                            />\r\n                            <MultiSelectField\r\n                                defaultValue={data.qualities}\r\n                                options={qualitiesList}\r\n                                onChange={handleChange}\r\n                                name=\"qualities\"\r\n                                label=\"Выберите ваши качества\"\r\n                            />\r\n                            <button\r\n                                type=\"submit\"\r\n                                disabled={!isValid}\r\n                                className=\"btn btn-primary w-100 mx-auto\"\r\n                            >\r\n                                Обновить\r\n                            </button>\r\n                        </form>\r\n                    ) : (\r\n                        \"Loading...\"\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserEditPage;\r\n\r\n","import UserEditPage from \"./userEditPage\";\n\nexport default UserEditPage;\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { getDataStatus, loadUsersList } from \"../../../store/users\";\r\nimport { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst UsersLoader = ({ children }) => {\r\n    const dataStatus = useSelector(getDataStatus());\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        if (!dataStatus) {\r\n            dispatch(loadUsersList());\r\n        }\r\n    }, []);\r\n\r\n    if (!dataStatus) return \"Loading...\";\r\n    return children;\r\n};\r\n\r\nUsersLoader.propTypes = {\r\n    children: PropTypes.oneOfType([\r\n        PropTypes.arrayOf(PropTypes.node),\r\n        PropTypes.node\r\n    ])\r\n};\r\nexport default UsersLoader;","import React from \"react\";\r\nimport { Redirect, useParams } from \"react-router-dom\";\r\nimport UserPage from \"../components/page/userPage\";\r\nimport UsersListPage from \"../components/page/usersListPage\";\r\nimport UserEditPage from \"../components/page/userEditPage\";\r\nimport UsersLoader from \"../components/ui/hoc/usersLoader\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { getCurrentUserId } from \"../store/users\";\r\n\r\nconst Users = () => {\r\n    const params = useParams();\r\n    const {\r\n        userId,\r\n        edit\r\n    } = params;\r\n\r\n    const currentUserId = useSelector(getCurrentUserId());\r\n\r\n    return (\r\n        <>\r\n            <UsersLoader>\r\n                {userId ? (\r\n                    edit ? (userId === currentUserId ? (\r\n                            <UserEditPage userId={userId}/>\r\n                        ) : (\r\n                            <Redirect to={`/users/${currentUserId}/edit`}/>)\r\n                    ) : (\r\n                        <UserPage userId={userId}/>\r\n                    )\r\n                ) : (\r\n                    <UsersListPage/>\r\n                )}\r\n            </UsersLoader>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Users;\r\n","import React from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { getIsLoggedIn } from \"../../store/users\";\r\n\r\nconst ProtectedRoute = ({\r\n    component: Component,\r\n    children,\r\n    ...rest\r\n}) => {\r\n    const isLoggedIn = useSelector(getIsLoggedIn());\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={(props) => {\r\n                if (!isLoggedIn) {\r\n                    return <Redirect to={{\r\n                        pathname: \"/login\",\r\n                        state: {\r\n                            from: props.location\r\n                        }\r\n                    }}/>;\r\n                }\r\n                return Component ? <Component {...props}/> : children;\r\n            }}/>\r\n    );\r\n};\r\nProtectedRoute.propTypes = {\r\n    component: PropTypes.func,\r\n    location: PropTypes.object,\r\n    children: PropTypes.oneOfType([\r\n        PropTypes.arrayOf(PropTypes.node),\r\n        PropTypes.node\r\n    ])\r\n};\r\nexport default ProtectedRoute;","import React, { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { logOut } from \"../store/users\";\r\n\r\nconst LogOut = () => {\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        dispatch(logOut());\r\n    }, []);\r\n\r\n    return (<h1>Loading...</h1>);\r\n};\r\n\r\nexport default LogOut;","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { getIsLoggedIn, getUsersLoadingStatus, loadUsersList } from \"../../../store/users\";\r\nimport { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { loadQualitiesList } from \"../../../store/qualities\";\r\nimport { loadProfessionsList } from \"../../../store/professions\";\r\n\r\nconst AppLoader = ({ children }) => {\r\n    const dispatch = useDispatch();\r\n    const isLoggedIn = useSelector(getIsLoggedIn());\r\n    const usersStatusLoading = useSelector(getUsersLoadingStatus());\r\n    useEffect(() => {\r\n        dispatch(loadQualitiesList());\r\n        dispatch(loadProfessionsList());\r\n        if (isLoggedIn) {\r\n            dispatch(loadUsersList());\r\n        }\r\n    }, [isLoggedIn]);\r\n\r\n    if (usersStatusLoading) return \"Loading...\";\r\n    return children;\r\n};\r\n\r\nAppLoader.propTypes = {\r\n    children: PropTypes.oneOfType([\r\n        PropTypes.arrayOf(PropTypes.node),\r\n        PropTypes.node\r\n    ])\r\n};\r\nexport default AppLoader;","import React from \"react\";\r\nimport Navbar from \"./components/ui/navbar\";\r\nimport { Redirect, Route, Switch } from \"react-router-dom\";\r\nimport Main from \"./layouts/main\";\r\nimport Login from \"./layouts/login\";\r\nimport Users from \"./layouts/users\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport ProtectedRoute from \"./components/common/protectedRoute\";\r\nimport LogOut from \"./layouts/logout\";\r\nimport AppLoader from \"./components/ui/hoc/appLoader\";\r\n\r\nfunction App() {\r\n\r\n    return (\r\n        <div>\r\n            <AppLoader>\r\n                <Navbar/>\r\n                    <Switch>\r\n                        <Route path=\"/\" exact component={Main}/>\r\n                        <Route path=\"/login/:type?\" component={Login}/>\r\n                        <Route path=\"/logout\" component={LogOut}/>\r\n                        <ProtectedRoute path=\"/users/:userId?/:edit?\" component={Users}/>\r\n                        <Redirect to=\"/\"/>\r\n                    </Switch>\r\n                {/* <Route path=\"/users/:userId?\" component={Users} /> */}\r\n            </AppLoader>\r\n            <ToastContainer/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { combineReducers, configureStore } from \"@reduxjs/toolkit\";\r\nimport qualitiesReducer from \"./qualities\";\r\nimport professionsReducer from \"./professions\";\r\nimport usersReducer from \"./users\";\r\nimport commentsReducer from \"./comments\";\r\n\r\nconst rootReducer = combineReducers({\r\n    qualities: qualitiesReducer,\r\n    professions: professionsReducer,\r\n    users: usersReducer,\r\n    comments: commentsReducer\r\n});\r\n\r\nexport function createStore() {\r\n    return configureStore({\r\n        reducer: rootReducer\r\n    });\r\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport App from \"./app/App\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"./app/store/createStore\";\nimport { Router } from \"react-router-dom\";\nimport history from \"./app/utils/history\";\n\nconst store = createStore();\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <Router history={history}>\n                <App/>\n            </Router>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}